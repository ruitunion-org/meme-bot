name: Create and publish a Docker image
on:
  push:
    branches: ['main', 'master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REMOTE_REPO: argocd-manifests

jobs:
  build-and-push-image:
    name: Build and push images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Add SHORT_SHA variable
        run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  dispatch-templates-rendering:
    name: Dispatch templates rendering
    needs: build-and-push-image
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Add SHORT_SHA variable
        run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Dispatch
        run: |
            curl \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.DISPATCH_TOKEN }}" \
            --request POST \
            --data '{"event_type": "templates_update", "client_payload": { "commit_sha": "${{ github.sha }}", "dispatch_repo": "${{ github.event.repository.name }}", "image_tag": "${{ env.SHORT_SHA }}" }}' \
            https://api.github.com/repos/ruitunion-org/${{ env.REMOTE_REPO }}/dispatches
